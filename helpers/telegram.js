const Telegraf = require("telegraf");
const empty = require("lodash").isEmpty;
const Extra = require('telegraf/extra')
const Markup = require('telegraf/markup')

// Token
const bot = new Telegraf(process.env.BOT_TOKEN);

// Send message to Telegram
const sendMessage = async (text, keyboard) => {
  try {
    bot.telegram.sendMessage(process.env.ORDER_CHAT_ID, text, keyboard ? Extra.markup(keyboard) : Extra.HTML())
  } catch (error) {
    console.log('error :>> ', error);
  }
}

const send = async (status, params) => {
  const {
    name,
    price,
    message,
    camp,
    keyboard
  } = params;

  let text = "";

  switch (status) {
      case "CREATED_ORDER":
      text += `–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞!\n`;
      text += `<b>‚úÖ –°—Ç–∞—Ç—É—Å:</b> –ù–æ–≤–∏–π –∑–∞–∫–∞–∑! \n`;
      text += `<b>–ò–º—è: ${name}</b>\n`;
      text += `<b>üí∞ C—É–º–º–∞:</b> ${price}\n`;
      text += "----------------------------------";
      break;
      case "PATCH_ORDER":
      text += `–ò–∑–º–µ–Ω–∞ –∑–∞—è–≤–∫–∏!\n`;
      text += `<b>‚úÖ –°—Ç–∞—Ç—É—Å:</b> –ó–∞–∫–∞–∑ –∏–∑–º–µ–Ω–µ–Ω! \n`;
      text += `<b>–ò–º—è: ${name}</b>\n`;
      text += `<b>üí∞ C—É–º–º–∞:</b> ${price}\n`;
      text += "----------------------------------";
      break;
      case "DELETE_ORDER":
      text += `–û—Ç–º–µ–Ω–∞ –∑–∞—è–≤–∫–∏!\n`;
      text += `<b>‚úÖ –°—Ç–∞—Ç—É—Å:</b> –ó–∞–∫–∞–∑ –æ—Ç–º–µ–Ω–µ–Ω! \n`;
      text += `<b>–ò–º—è: ${name}</b>\n`;
      text += `<b>üí∞ C—É–º–º–∞:</b> ${price}\n`;
      text += "----------------------------------";
      break;
      case "VEREFICATION_CAMP":
      text += `–ù–æ–≤–∏–π –ª–∞–≥–µ—Ä—å!\n`;
      text += `<b>‚úÖ –°—Ç–∞—Ç—É—Å:</b> –ù–æ–≤–∏–π –ª–∞–≥–µ—Ä—å!\n`;
      text += `<b> –í–ª–∞–¥–µ–ª–µ—Ü: ${name}</b>\n`;
      text += `<b>üí∞ –õ–∞–≥–µ—Ä—å:</b> ${camp}\n`;
      text += "----------------------------------";
      break;
      case "PATCH_CAMP":
      text += `–õ–∞–≥–µ—Ä—å –∏–∑–º–µ–Ω–µ–Ω!\n`;
      text += `<b>‚úÖ –°—Ç–∞—Ç—É—Å:</b> –õ–∞–≥–µ—Ä—å –∏–∑–º–µ–Ω–µ–Ω! \n`;
      text += `<b> –í–ª–∞–¥–µ–ª–µ—Ü: ${name}</b>\n`;
      text += `<b>üí∞ –õ–∞–≥–µ—Ä—å:</b> ${camp}\n`;
      text += "----------------------------------";
      break;
    case "NOT_VERIFIED":
      text += `üëâ –ó–∞—è–≤–∫–∞ –∏–∑–º–µ–Ω–∏–ª–∞ —Å—Ç–∞—Ç—É—Å.\n`;
      text += `‚ö†Ô∏è –ù–æ–≤—ã–π —Å—Ç–∞—Ç—É—Å: <b>–¢—Ä–µ–±—É–µ—Ç –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏</b>`;
      text += `üì¨ <b>–ü–æ–ª—É—á–µ–Ω–∞—è —Å—É–º–º–∞</b>: 10.00\n`;
      text += `üí∞ <b>–û–∂–∏–¥–∞–µ–º–∞—è —Å—É–º–º–∞</b>: 19.90\n`;
      text += "----------------------------------";
      break;
    case "PAID":
      text += `üëâ –ó–∞—è–≤–∫–∞ –∏–∑–º–µ–Ω–∏–ª–∞ —Å—Ç–∞—Ç—É—Å.\n`;
      text += `üí∞ –ù–æ–≤—ã–π —Å—Ç–∞—Ç—É—Å: <b>–û–ø–ª–∞—á–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º</b>\n`;
      text += `<b>–ò–º—è: ${name}</b>\n`;
      text += `<b>üí∞ C—É–º–º–∞:</b> ${price}\n`;
      text += "----------------------------------";
      break;
    case "FAILED":
      text += `üëâ –ó–∞—è–≤–∫–∞ –∏–∑–º–µ–Ω–∏–ª–∞ —Å—Ç–∞—Ç—É—Å.\n`;
      text += `‚ùå –ù–æ–≤—ã–π —Å—Ç–∞—Ç—É—Å: <b>–û—à–∏–±–∫–∞</b>\n`;
      text += `<b>–ò–º—è: ${name}</b>\n`;
      text += `<b>üí∞ C—É–º–º–∞:</b> ${price}\n`;
      text += "----------------------------------";
      break;
    case "SYSERROR":
      text += `<b>‚ö†Ô∏è–°–∏—Å—Ç–µ–º–Ω–∞—è –æ—à–∏–±–∫–∞!</b>\n`;
      text += `${message}\n`;
      text += `----------------------------------`;
      break;
    default:
      text += message;
  }
  return sendMessage(text, keyboard);
};

module.exports = { send };
